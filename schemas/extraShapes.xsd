<?xml version="1.0"?>
<!--
This is free and unencumbered software released into the public domain.

Anyone is free to copy, modify, publish, use, compile, sell, or
distribute this software, either in source code form or as a compiled
binary, for any purpose, commercial or non-commercial, and by any
means.

In jurisdictions that recognize copyright laws, the author or authors
of this software dedicate any and all copyright interest in the
software to the public domain. We make this dedication for the benefit
of the public at large and to the detriment of our heirs and
successors. We intend this dedication to be an overt act of
relinquishment in perpetuity of all present and future rights to this
software under copyright law.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR
OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
OTHER DEALINGS IN THE SOFTWARE.

For more information, please refer to <https://unlicense.org>

Warning: 
    The schema cannot fully validate the following shapes:
        dynamicMesh
        heightfield
        staticMesh
        sphericalSegment
-->
<xs:schema 
    version="1.0"
    xmlns="https://cientistavuador.github.io/schemas/extraShapes.xsd"
    xmlns:collisionShape="https://cientistavuador.github.io/schemas/collisionShape.xsd"
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
    targetNamespace="https://cientistavuador.github.io/schemas/extraShapes.xsd"
    elementFormDefault="qualified"
>
    <xs:import 
        namespace="https://cientistavuador.github.io/schemas/collisionShape.xsd" 
        schemaLocation="https://cientistavuador.github.io/schemas/collisionShape.xsd"
    />
    
    <!-- A positive non zero decimal -->
    <xs:simpleType name="positiveNonZeroFloatType">
        <xs:restriction base="xs:float">
            <xs:minExclusive value="0"/>
        </xs:restriction>
    </xs:simpleType>
    
    <!-- A File -->
    <xs:complexType name="fileType">
        <xs:attribute name="file" type="xs:string" use="required">
            <xs:annotation>
                <xs:documentation>
                    The file.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="type" type="xs:string" use="required">
            <xs:annotation>
                <xs:documentation>
                    The type of the file.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="embedded" type="xs:boolean" default="false">
            <xs:annotation>
                <xs:documentation>
                    true if the file represents a meta element with base64 content, the default is false.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>
    
    <!-- Type definitions -->
    <xs:complexType name="coneType">
        <xs:complexContent>
            <xs:extension base="collisionShape:conicalType">
                <xs:attributeGroup ref="collisionShape:uniformScale"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    
    <xs:complexType name="conicalFrustumType">
        <xs:attribute name="a" type="positiveNonZeroFloatType" use="required">
            <xs:annotation>
                <xs:documentation>
                    The radius of the A base, must be positive and not zero.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="b" type="positiveNonZeroFloatType" use="required">
            <xs:annotation>
                <xs:documentation>
                    The radius of the B base, must be positive and not zero.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="height" type="positiveNonZeroFloatType" use="required">
            <xs:annotation>
                <xs:documentation>
                    The height, must be positive and not zero.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attributeGroup ref="collisionShape:limitedScale"/>
    </xs:complexType>
    
    <xs:complexType name="multiSphereType">
        <xs:sequence>
            <xs:element name="sphere" minOccurs="1" maxOccurs="unbounded">
                <xs:complexType>
                    <xs:complexContent>
                        <xs:extension base="collisionShape:vector3Type">
                            <xs:attribute name="radius" type="collisionShape:positiveDecimalType" use="required">
                                <xs:annotation>
                                    <xs:documentation>
                                        The radius of the sphere, must be positive.
                                    </xs:documentation>
                                </xs:annotation>
                            </xs:attribute>
                        </xs:extension>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
        <xs:attributeGroup ref="collisionShape:xyzScale"/>
    </xs:complexType>
    
    <xs:complexType name="planeType">
        <xs:complexContent>
            <xs:extension base="collisionShape:vector3Type">
                <xs:attribute name="normalX" type="xs:float" use="required">
                    <xs:annotation>
                        <xs:documentation>
                            The normal x.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="normalY" type="xs:float" use="required">
                    <xs:annotation>
                        <xs:documentation>
                            The normal y.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="normalZ" type="xs:float" use="required">
                    <xs:annotation>
                        <xs:documentation>
                            The normal z.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attributeGroup ref="collisionShape:xyzScale"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    
    <xs:complexType name="sphericalSegmentType">
        <xs:attribute name="radius" type="positiveNonZeroFloatType" use="required">
            <xs:annotation>
                <xs:documentation>
                    The radius of the spherical segment, must be positive and not zero.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="yMax" type="xs:float" use="required">
            <xs:annotation>
                <xs:documentation>
                        <![CDATA[
                        The max Y of the spherical segment, must be >= to yMin and <= to radius.
                        ]]>
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="yMin" type="xs:float" use="required">
            <xs:annotation>
                <xs:documentation>
                        <![CDATA[
                        The min Y of the spherical segment, must be >= to -radius and <= to yMax.
                        ]]>
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attributeGroup ref="collisionShape:uniformScale"/>
    </xs:complexType>
    
    <xs:complexType name="dynamicMeshType">
        <xs:complexContent>
            <xs:extension base="fileType">
                <xs:attributeGroup ref="collisionShape:xyzScale"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    
    <xs:complexType name="heightfieldType">
        <xs:complexContent>
            <xs:extension base="fileType">
                <xs:attributeGroup ref="collisionShape:xyzScale"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    
    <xs:complexType name="staticMeshType">
        <xs:complexContent>
            <xs:extension base="fileType">
                <xs:attributeGroup ref="collisionShape:xyzScale"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <!-- End type definitions -->
    
    <!-- Extra shapes -->
    <xs:element name="cone" type="coneType">
        <xs:annotation>
            <xs:documentation>
                A cone.
            </xs:documentation>
        </xs:annotation>
    </xs:element>
    
    <xs:element name="conicalFrustum" type="conicalFrustumType">
        <xs:annotation>
            <xs:documentation>
                A conical frustum.
            </xs:documentation>
        </xs:annotation>
    </xs:element>
    
    <xs:element name="multiSphere" type="multiSphereType">
        <xs:annotation>
            <xs:documentation>
                A multi sphere.
            </xs:documentation>
        </xs:annotation>
    </xs:element>
    
    <xs:element name="plane" type="planeType">
        <xs:annotation>
            <xs:documentation>
                A plane.
            </xs:documentation>
        </xs:annotation>
    </xs:element>
    
    <xs:element name="sphericalSegment" type="sphericalSegmentType">
        <xs:annotation>
            <xs:documentation>
                A spherical segment.
            </xs:documentation>
        </xs:annotation>
    </xs:element>
    
    <xs:element name="dynamicMesh" type="dynamicMeshType">
        <xs:annotation>
            <xs:documentation>
                A dynamic mesh. (gimpact)
            </xs:documentation>
        </xs:annotation>
    </xs:element>
    
    <xs:element name="heightfield" type="heightfieldType">
        <xs:annotation>
            <xs:documentation>
                A heightfield.
            </xs:documentation>
        </xs:annotation>
    </xs:element>
    
    <xs:element name="staticMesh" type="staticMeshType">
        <xs:annotation>
            <xs:documentation>
                A static mesh.
            </xs:documentation>
        </xs:annotation>
    </xs:element>
    <!-- End extra shapes -->
</xs:schema>
