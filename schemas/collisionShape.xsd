<?xml version="1.0"?>
<!--
This is free and unencumbered software released into the public domain.

Anyone is free to copy, modify, publish, use, compile, sell, or
distribute this software, either in source code form or as a compiled
binary, for any purpose, commercial or non-commercial, and by any
means.

In jurisdictions that recognize copyright laws, the author or authors
of this software dedicate any and all copyright interest in the
software to the public domain. We make this dedication for the benefit
of the public at large and to the detriment of our heirs and
successors. We intend this dedication to be an overt act of
relinquishment in perpetuity of all present and future rights to this
software under copyright law.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR
OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
OTHER DEALINGS IN THE SOFTWARE.

For more information, please refer to <https://unlicense.org>
-->
<xs:schema 
    version="1.0"
    xmlns="https://cientistavuador.github.io/schemas/collisionShape.xsd"
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
    targetNamespace="https://cientistavuador.github.io/schemas/collisionShape.xsd"
    elementFormDefault="qualified"
>
    <!-- A positive decimal -->
    <xs:simpleType name="positiveDecimalType">
        <xs:restriction base="xs:decimal">
            <xs:minInclusive value="0"/>
        </xs:restriction>
    </xs:simpleType>
    
    <!-- A integer representing a axis -->
    <xs:simpleType name="axisIndexType">
        <xs:restriction base="xs:integer">
            <xs:minInclusive value="0"/>
            <xs:maxExclusive value="3"/>
        </xs:restriction>
    </xs:simpleType>
    
    <!-- A xyz vector -->
    <xs:complexType name="vector3Type">
        <xs:attribute name="x" type="xs:decimal" use="required">
            <xs:annotation>
                <xs:documentation>
                    The x coordinate.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="y" type="xs:decimal" use="required">
            <xs:annotation>
                <xs:documentation>
                    The y coordinate.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="z" type="xs:decimal" use="required">
            <xs:annotation>
                <xs:documentation>
                    The z coordinate.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>
    
    <!-- Euler angles in degrees -->
    <xs:complexType name="eulerAnglesType">
        <xs:attribute name="pitch" type="xs:decimal" use="required">
            <xs:annotation>
                <xs:documentation>
                    The pitch in euler angles, in degrees.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="yaw" type="xs:decimal" use="required">
            <xs:annotation>
                <xs:documentation>
                    The yaw in euler angles, in degrees.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="roll" type="xs:decimal" use="required">
            <xs:annotation>
                <xs:documentation>
                    The roll in euler angles, in degrees.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>
    
    <!-- A quaternion -->
    <xs:complexType name="quaternionType">
        <xs:attribute name="x" type="xs:decimal" use="required">
            <xs:annotation>
                <xs:documentation>
                    The x of the quaternion.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="y" type="xs:decimal" use="required">
            <xs:annotation>
                <xs:documentation>
                    The y of the quaternion.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="z" type="xs:decimal" use="required">
            <xs:annotation>
                <xs:documentation>
                    The z of the quaternion.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="w" type="xs:decimal" use="required">
            <xs:annotation>
                <xs:documentation>
                    The w of the quaternion.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>
    
    <!-- A transform (translation and rotation) -->
    <xs:complexType name="transformType">
        <xs:all>
            <xs:element name="translation" type="vector3Type" minOccurs="0" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>
                        The position.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="rotation" minOccurs="0" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>
                        The rotation, must have a euler rotation or a quaternion rotation.
                    </xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:choice>
                        <xs:element name="euler" type="eulerAnglesType">
                            <xs:annotation>
                                <xs:documentation>
                                    The rotation in euler angles (pitch, yaw, roll) defined in degrees.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="quaternion" type="quaternionType">
                            <xs:annotation>
                                <xs:documentation>
                                    The rotation in a quaternion.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:choice>
                </xs:complexType>
            </xs:element>
        </xs:all>
    </xs:complexType>
    
    <!-- A meta data -->
    <xs:complexType name="metaType">
        <xs:attribute name="name" type="xs:string" use="required">
            <xs:annotation>
                <xs:documentation>
                    The name of the meta.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="content" type="xs:string" use="required">
            <xs:annotation>
                <xs:documentation>
                    The content of the meta.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>
    
    <!-- A meta element -->
    <xs:group name="metaGroup">
        <xs:sequence>
            <xs:element name="meta" type="metaType" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation>
                    <xs:documentation>
                        The meta element of this head, must contain a name and a content.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:group>
    
    <!-- A box shape -->
    <xs:complexType name="boxType">
        <xs:attribute name="halfWidth" type="positiveDecimalType" use="required">
            <xs:annotation>
                <xs:documentation>
                    The half width (half extent in the x axis) of the box, not negative.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="halfHeight" type="positiveDecimalType" use="required">
            <xs:annotation>
                <xs:documentation>
                    The half height (half extent in the y axis) of the box, not negative.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="halfDepth" type="positiveDecimalType" use="required">
            <xs:annotation>
                <xs:documentation>
                    The half depth (half extent in the z axis) of the box, not negative.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>
    
    <!-- A conical shape (cylinder, cone, capsule) -->
    <xs:complexType name="conicalType">
        <xs:attribute name="radius" type="positiveDecimalType" use="required">
            <xs:annotation>
                <xs:documentation>
                    The radius of the shape, not negative.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="height" type="positiveDecimalType" use="required">
            <xs:annotation>
                <xs:documentation>
                    The height of the shape, not negative.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="axis" type="axisIndexType" use="required">
            <xs:annotation>
                <xs:documentation>
                    The axis of the shape, must be 0 for X, 1 for Y or 2 for Z.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>
    
    <!-- A sphere shape -->
    <xs:complexType name="sphereType">
        <xs:attribute name="radius" type="positiveDecimalType" use="required">
            <xs:annotation>
                <xs:documentation>
                    The radius of the sphere, not negative.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>
    
    <!-- A convex hull shape -->
    <xs:complexType name="hullType">
        <xs:sequence>
            <xs:element name="vertex" type="vector3Type" minOccurs="1" maxOccurs="unbounded">
                <xs:annotation>
                    <xs:documentation>
                        A vertex of the hull.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    
    <!-- Primitive collision shapes -->
    <xs:group name="primitiveShapesGroup">
        <xs:choice>
            <xs:element name="box" type="boxType">
                <xs:annotation>
                    <xs:documentation>
                        A primitive box collision shape.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="capsule" type="conicalType">
                <xs:annotation>
                    <xs:documentation>
                        A primitive capsule collision shape, the radius represents the spherical part of the capsule and the height represents the cylindrical part of the capsule so the total height of the capsule is (radius * 2) + height.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="cone" type="conicalType">
                <xs:annotation>
                    <xs:documentation>
                        A primitive cone collision shape.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="cylinder" type="conicalType">
                <xs:annotation>
                    <xs:documentation>
                        A primitive cylinder collision shape.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="sphere" type="sphereType">
                <xs:annotation>
                    <xs:documentation>
                        A primitive sphere collision shape.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="hull" type="hullType">
                <xs:annotation>
                    <xs:documentation>
                        A primitive hull collision shape, must have at least one vertex.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="empty">
                <xs:annotation>
                    <xs:documentation>
                        A primitive empty collision shape, does nothing.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:choice>
    </xs:group>
    
    <!-- A extension type -->
    <xs:complexType name="extensionType">
        <xs:sequence>
            <xs:element name="if" minOccurs="1" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>
                        The if element, must contain a shape from a extension.
                    </xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:any minOccurs="1" maxOccurs="1" processContents="lax" namespace="##other"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="else" minOccurs="1" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>
                        The else element, must contain a primitive shape or another extension shape.
                    </xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:choice>
                        <xs:group ref="primitiveShapesGroup"/>
                        <xs:element name="extension" type="extensionType"/>
                    </xs:choice>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    
    <!-- A extension collision shape -->
    <xs:group name="extensionGroup">
        <xs:choice>
            <xs:element name="extension" type="extensionType">
                <xs:annotation>
                    <xs:documentation>
                        A collision shape from a extension, must have one try element and one catch element.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:choice>
    </xs:group>
    
    <!-- A compound collision shape -->
    <xs:group name="compoundShapeGroup">
        <xs:choice>
            <xs:element name="compound" minOccurs="1" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>
                        A compound shape, must contain one or more children.
                    </xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="child" minOccurs="1" maxOccurs="unbounded">
                            <xs:annotation>
                                <xs:documentation>
                                    A compound child element, must start with a optional head, a mandatory body and a optional foot element.
                                </xs:documentation>
                            </xs:annotation>
                            <xs:complexType>
                                <xs:sequence>
                                    <xs:element name="head" minOccurs="0" maxOccurs="1">
                                        <xs:annotation>
                                            <xs:documentation>
                                                The head element of this child, must contain zero or more meta elements.
                                            </xs:documentation>
                                        </xs:annotation>
                                        <xs:complexType>
                                            <xs:sequence>
                                                <xs:group ref="metaGroup"/>
                                            </xs:sequence>
                                        </xs:complexType>
                                    </xs:element>
                                    <xs:element name="body" minOccurs="1" maxOccurs="1">
                                        <xs:annotation>
                                            <xs:documentation>
                                                The body element of this child, must contain a primitive shape or a extension, must not be a compound.
                                            </xs:documentation>
                                        </xs:annotation>
                                        <xs:complexType>
                                            <xs:choice>
                                                <xs:group ref="primitiveShapesGroup"/>
                                                <xs:group ref="extensionGroup"/>
                                            </xs:choice>
                                        </xs:complexType>
                                    </xs:element>
                                    <xs:element name="foot" type="transformType" minOccurs="0" maxOccurs="1">
                                        <xs:annotation>
                                            <xs:documentation>
                                                The foot of this child element, can contain a translation and/or a rotation element, in any order.
                                            </xs:documentation>
                                        </xs:annotation>
                                    </xs:element>
                                </xs:sequence>
                            </xs:complexType>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
        </xs:choice>
    </xs:group>
    
    <!-- Root -->
    <xs:element name="collisionShape">
        <xs:annotation>
            <xs:documentation>
                The root element of the collision shape, must start with a optional head element and a mandatory body element.
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element name="head" minOccurs="0" maxOccurs="1">
                    <xs:annotation>
                        <xs:documentation>
                            The head element, can contain zero or more meta elements.
                        </xs:documentation>
                    </xs:annotation>
                    <xs:complexType>
                        <xs:sequence>
                            <xs:group ref="metaGroup"/>
                        </xs:sequence>
                    </xs:complexType>
                </xs:element>
                <xs:element name="body" minOccurs="1" maxOccurs="1">
                    <xs:annotation>
                        <xs:documentation>
                            The body of this collision shape, must be a primitive shape, a compound shape or a extension shape.
                        </xs:documentation>
                    </xs:annotation>
                    <xs:complexType>
                        <xs:choice>
                            <xs:group ref="compoundShapeGroup"/>
                            <xs:group ref="primitiveShapesGroup"/>
                            <xs:group ref="extensionGroup"/>
                        </xs:choice>
                    </xs:complexType>
                </xs:element>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
</xs:schema>
